name: 🚀 Development CI (Permissive)

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  XCODE_PROJECT: FinanceApp.xcworkspace
  SCHEME: FinanceApp

jobs:
  lint-only:
    name: 🧹 Quick Lint Check
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Run SwiftLint
        run: |
          swiftlint lint --reporter github-actions-logging
        continue-on-error: true

  build-check:
    name: 🔍 Build Investigation
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "16.2.0"

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          gem install cocoapods
          pod install --repo-update

      - name: Diagnostic Build Check
        run: |
          echo "🔍 Investigating build issues..."

          # Check workspace structure
          echo "📁 Workspace contents:"
          ls -la

          # List available schemes
          echo "📋 Available schemes:"
          xcodebuild -list -workspace ${{ env.XCODE_PROJECT }}

          # Check project settings
          echo "⚙️ Build settings preview:"
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -showBuildSettings | head -30

          # Validate build configuration first  
          echo "✅ Build configuration check:"
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -showBuildSettings | head -10

          echo "🔨 Attempting actual build..."
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -destination 'platform=iOS Simulator,name=iPhone 16,OS=latest' \
                     clean build-for-testing 2>&1 | tee build-output.log
        continue-on-error: true

      - name: Upload diagnostic logs
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: diagnostic-logs
          path: |
            build-output.log
            ~/Library/Developer/Xcode/DerivedData/*/Logs/Build/*.xcactivitylog

  semantic-version-develop:
    name: 📦 Development Versioning (Permissive)
    runs-on: ubuntu-latest
    needs: lint-only # Only depends on lint, not build
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Semantic Release (Development)
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
          dry_run: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Development Release Summary
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "🎉 New development release: v${{ steps.semantic.outputs.new_release_version }}"
          echo "📝 This version is ready for development and testing"
          echo "⚠️  Build checks are running separately - check diagnostics"
          echo "🚀 When build is stable, merge to main for production"
