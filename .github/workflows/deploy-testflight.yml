name: ðŸš€ Deploy to TestFlight (DISABLED - No Apple Developer Account)

on:
  # Temporarily disabled - requires paid Apple Developer account
  # push:
  #   branches: [develop]
  workflow_dispatch:
    inputs:
      version_bump:
        description: "Version bump type"
        required: true
        default: "patch"
        type: choice
        options:
          - patch
          - minor
          - major

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  XCODE_PROJECT: FinanceApp.xcworkspace
  SCHEME: FinanceApp
  CONFIGURATION: Release

jobs:
  deploy:
    name: ðŸš€ Deploy Beta to TestFlight
    runs-on: macos-14
    if: github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          gem install cocoapods
          pod install --repo-update

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"

      - name: Install Fastlane
        run: |
          gem install fastlane

      - name: Run tests
        run: |
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
                     test

      - name: Get beta version
        id: version
        run: |
          CURRENT_VERSION=$(grep '"version"' package.json | sed 's/.*"version": "\(.*\)".*/\1/')
          BETA_VERSION="${CURRENT_VERSION}-beta.${GITHUB_RUN_NUMBER}"
          echo "beta_version=$BETA_VERSION" >> $GITHUB_OUTPUT
          echo "Beta version: $BETA_VERSION"

      - name: Update version for beta
        run: |
          BETA_VERSION="${{ steps.version.outputs.beta_version }}"
          BUILD_NUMBER="${GITHUB_RUN_NUMBER}"

          # Update marketing version and build number in project
          sed -i '' "s/MARKETING_VERSION = .*/MARKETING_VERSION = $BETA_VERSION;/" FinanceApp.xcodeproj/project.pbxproj
          sed -i '' "s/CURRENT_PROJECT_VERSION = .*/CURRENT_PROJECT_VERSION = $BUILD_NUMBER;/" FinanceApp.xcodeproj/project.pbxproj

          echo "Updated beta version to $BETA_VERSION ($BUILD_NUMBER)"

      - name: Setup App Store Connect API Key
        run: |
          mkdir -p ~/.appstoreconnect/private_keys/
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" | base64 --decode > ~/.appstoreconnect/private_keys/AuthKey_${{ secrets.APP_STORE_CONNECT_KEY_ID }}.p8

      - name: Build and Archive
        run: |
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -configuration ${{ env.CONFIGURATION }} \
                     -destination 'generic/platform=iOS' \
                     -archivePath "FinanceApp.xcarchive" \
                     archive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
                     -archivePath "FinanceApp.xcarchive" \
                     -exportPath "." \
                     -exportOptionsPlist ExportOptions.plist

      - name: Upload to TestFlight
        run: |
          xcrun altool --upload-app \
                       --type ios \
                       --file "*.ipa" \
                       --primary-bundle-id "com.yourcompany.financeapp" \
                       --apiKey ${{ secrets.APP_STORE_CONNECT_KEY_ID }} \
                       --apiIssuer ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}

      - name: Create Beta Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.beta_version }}
          name: Beta Release v${{ steps.version.outputs.beta_version }}
          body: |
            ðŸš§ **Beta Release**

            This is a beta release deployed to TestFlight for testing purposes.

            **Changes since last release:**
            - Automated beta build from develop branch
            - Build number: ${{ github.run_number }}

            **Testing:**
            - Available on TestFlight for internal testing
            - Please report any issues on GitHub
          files: "*.ipa"
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify Slack (Optional)
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: success
          text: |
            ðŸŽ‰ Beta v${{ steps.version.outputs.beta_version }} has been deployed to TestFlight!

            Build: ${{ github.run_number }}
            Commit: ${{ github.sha }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
