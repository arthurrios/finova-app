name: üîÑ Development CI

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

env:
  DEVELOPER_DIR: /Applications/Xcode.app/Contents/Developer
  XCODE_PROJECT: FinanceApp.xcworkspace
  SCHEME: FinanceApp

jobs:
  test:
    name: üß™ Run Tests & Lint
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          gem install cocoapods
          pod install --repo-update

      - name: Install SwiftLint
        run: |
          brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint lint --reporter github-actions-logging

      - name: Build for testing
        run: |
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
                     clean build-for-testing

      - name: Run unit tests
        run: |
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
                     test-without-building \
                     -resultBundlePath TestResults.xcresult

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results-develop
          path: TestResults.xcresult

  semantic-version-develop:
    name: üì¶ Development Versioning
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Semantic Release (Development)
        id: semantic
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 22
          extra_plugins: |
            @semantic-release/changelog@6.0.0
            @semantic-release/git@10.0.0
          dry_run: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Development Release Summary
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "üéâ New development release: v${{ steps.semantic.outputs.new_release_version }}"
          echo "üìù This version is ready for development and testing"
          echo "üöÄ When ready for production, create a PR to main branch"

      - name: Update package.json version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          NEW_VERSION="${{ steps.semantic.outputs.new_release_version }}"
          echo "üì¶ Version updated to: $NEW_VERSION"
          echo "This version can be used for local development and testing"

  build-verification:
    name: üèóÔ∏è Build Verification
    runs-on: macos-14
    needs: [test, semantic-version-develop]
    if: needs.semantic-version-develop.outputs.new_release_published == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: develop

      - name: Select Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: Pods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - name: Install dependencies
        run: |
          gem install cocoapods
          pod install --repo-update

      - name: Verify release build (Simulator only)
        run: |
          echo "üî® Building release version for verification..."
          xcodebuild -workspace ${{ env.XCODE_PROJECT }} \
                     -scheme ${{ env.SCHEME }} \
                     -configuration Release \
                     -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
                     clean build
                     
          echo "‚úÖ Release build verification successful!"
          echo "üì± Version ${{ needs.semantic-version-develop.outputs.new_release_version }} is ready"
          echo "üí° This build is simulator-only (no device/archive needed for development)"
